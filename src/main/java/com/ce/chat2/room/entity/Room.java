package com.ce.chat2.room.entity;

import com.ce.chat2.chat.entity.Chat;
import com.ce.chat2.user.entity.User;
import lombok.*;
import software.amazon.awssdk.enhanced.dynamodb.extensions.annotations.DynamoDbAutoGeneratedTimestampAttribute;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbAttribute;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbBean;
import software.amazon.awssdk.enhanced.dynamodb.mapper.annotations.DynamoDbPartitionKey;

import java.time.Instant;
import java.util.UUID;

@ToString
@Builder
@Setter
@AllArgsConstructor
@NoArgsConstructor
@DynamoDbBean
public class Room {

    @Getter(onMethod_ = {@DynamoDbPartitionKey, @DynamoDbAttribute("RoomId")})
    private String roomId;

    @Getter(onMethod_ = {@DynamoDbAttribute("RoomName")})
    private String roomName;

    @Getter(onMethod_ = {@DynamoDbAttribute("LatestMessage")})
    private String latestMessage;

    @Getter(onMethod_ = {@DynamoDbAttribute("LatestTimestamp"), @DynamoDbAutoGeneratedTimestampAttribute})
    private Instant latestTimestamp;

    @Getter(onMethod_ = {@DynamoDbAttribute("CreatedAt")})
    private Instant createdAt;

    @Getter(onMethod_ = {@DynamoDbAttribute("CreatedBy")})
    private Integer createdBy;

    public static Room of(User creator, String latestMessage){
        UUID uuid = UUID.randomUUID();
        Integer creatorId = creator.getId();
        String roomId = uuid.toString();
        String roomName = creator.getName() + " 님의 채팅방";
        Instant now = Instant.now();

        return Room.builder()
                .roomId(roomId)
                .roomName(roomName)
                .latestMessage(latestMessage)
                .latestTimestamp(now)
                .createdAt(now)
                .createdBy(creatorId)
                .build();
    }

    public static Room of(String roomId, String roomName, String latestMessage){
        return Room.builder()
                .roomId(roomId)
                .roomName(roomName)
                .latestMessage(latestMessage)
                .build();
    }

    public static Room from(Room room, Chat chat){
        return Room.builder()
                .roomId(room.getRoomId())
                .roomName(room.getRoomName())
                .latestMessage(chat.getContent())
                .createdAt(room.getCreatedAt())
                .createdBy(room.getCreatedBy())
                .build();
    }

}
